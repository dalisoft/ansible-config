---
- name: Prepare packages
  set_fact:
    packages: "{{ (shared_packages | default([])) + (apt_items | default([])) }}"

- name: List all apt packages
  package_facts:
    manager: apt
  register: apt_pkgs_list
  changed_when: false
  check_mode: false

- name: Adding apt keys
  become: yes
  become_user: root
  apt_key:
    url: "{{ item }}"
    state: present
  loop: "{{ apt_keys }}"
  when: apt_keys is defined
  register: install_apt_key
  until: install_apt_key is successful

- name: Adding apt ring keys
  become: yes
  become_user: root
  apt_key:
    keyserver: "{{ item.keyserver }}"
    id: "{{ item.id }}"
  loop: "{{ apt_ring_keys }}"
  when: apt_ring_keys is defined
  register: install_apt_ring_key
  until: install_apt_ring_key is successful

- name: Adding apt repositories
  become: yes
  become_user: root
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
  loop: "{{ apt_repos }}"
  when: apt_repos is defined
  register: install_apt_repo
  until: install_apt_repo is successful

- name: Installing apt force packages
  become: yes
  become_user: root
  apt:
    name: "{{ item }}"
    state: present
    dpkg_options: "force-overwrite"
  loop: "{{ apt_force_items }}"
  when:
    - apt_force_items is defined
    - item not in ansible_facts.packages
  register: install_optionless_apt_package
  until: install_optionless_apt_package is successful

- name: Installing apt packages
  become: yes
  become_user: root
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"
  when: item not in ansible_facts.packages
  register: install_apt_package
  until: install_apt_package is successful

- name: Cleanup apt packages
  become: yes
  become_user: root
  apt:
    autoclean: yes
    autoremove: yes
  register: clean_apt_package
  until: clean_apt_package is successful
